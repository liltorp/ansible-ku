- name: Sync the latest version of a file across servers
  hosts: prod_sspr_servers
  gather_facts: no
  become: true

  vars:
    file_path: "/etc/opt/microfocus/sspr/testSSPRConfiguration.xml"
    local_temp_dir: "/home/cbq520/ansible-ku/temp"

  tasks:

    - name: Ensure local temp dir exists
      file:
        path: "{{ local_temp_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
      become: false

    - name: Check if the file exists and gather stat info on each host
      stat:
        path: "{{ file_path }}"
      register: file_stat

    - name: Save normalized file info as fact on each host
      set_fact:
        file_info:
          host: "{{ inventory_hostname }}"
          path: "{{ file_path }}"
          exists: "{{ file_stat.stat.exists | default(false) }}"
          # mtime findes kun hvis filen findes; brug 0 som safe default
          mtime: "{{ (file_stat.stat.mtime | default(0)) | int }}"

    - name: Collect file_info from all hosts on localhost
      set_fact:
        all_files: "{{ ansible_play_hosts | map('extract', hostvars, 'file_info') | list }}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Pick the most recent existing file across hosts
      set_fact:
        most_recent: >-
          {{ (all_files
              | selectattr('exists')
              | sort(attribute='mtime')) | last | default(None) }}
      delegate_to: localhost
      run_once: true
      become: false

    - name: Abort if no file was found on any server
      fail:
        msg: "No file found on any server for path {{ file_path }}"
      when: most_recent is none
      delegate_to: localhost
      run_once: true
      become: false

    - name: Expose latest_host and latest_mtime for readability
      set_fact:
        latest_host: "{{ most_recent.host }}"
        latest_mtime: "{{ most_recent.mtime }}"
        latest_basename: "{{ file_path | basename }}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Show which host has the latest file
      debug:
        msg: "Host '{{ latest_host }}' has the latest file modified at {{ latest_mtime }}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Fetch the latest file from the source host to control node
      fetch:
        src: "{{ file_path }}"
        dest: "{{ local_temp_dir }}/"
        flat: yes        # gem som {{ basename(file_path) }} i local_temp_dir
      delegate_to: "{{ latest_host }}"
      run_once: true

    - name: Verify the file exists on the control node
      stat:
        path: "{{ local_temp_dir }}/{{ latest_basename }}"
      delegate_to: localhost
      run_once: true
      register: local_file_check
      become: false

    - name: Fail if file was not fetched
      fail:
        msg: "File not found on control node at {{ local_temp_dir }}/{{ latest_basename }}"
      when: not local_file_check.stat.exists
      delegate_to: localhost
      run_once: true
      become: false

    - name: Copy the latest file to all other servers
      copy:
        src: "{{ local_temp_dir }}/{{ latest_basename }}"   # fra control node
        dest: "{{ file_path }}"
        owner: root
        group: root
        mode: '0644'
      when: inventory_hostname != latest_host
      register: copy_result
    - name: Log copied file destinations
      debug:
        msg: "Fil kopieret fra {{ latest_host }} til {{ inventory_hostname }}: {{ copy_result.dest }}"
      when: inventory_hostname != latest_host and copy_result is defined

    - name: Clean up temp file on control node
      file:
        path: "{{ local_temp_dir }}/{{ latest_basename }}"
        state: absent
      delegate_to: localhost
      run_once: true
      become: false
